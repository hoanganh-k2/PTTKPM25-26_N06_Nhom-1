import { useState } from "react";
import { Link } from "react-router-dom";
import { useCart } from "../contexts/CartContext";
import "./CartPage.css";

export default function CartPage() {
  const { cartItems, totalItems, totalAmount, updateQuantity, removeFromCart, clearCart } = useCart();
  const [checkoutStep, setCheckoutStep] = useState(1); // 1: Gi·ªè h√†ng, 2: Th√¥ng tin giao h√†ng, 3: Thanh to√°n

  const handleUpdateQuantity = (productId, newQuantity) => {
    if (newQuantity <= 0) {
      if (window.confirm("B·∫°n c√≥ mu·ªën x√≥a s·∫£n ph·∫©m n√†y kh·ªèi gi·ªè h√†ng kh√¥ng?")) {
        removeFromCart(productId);
      }
    } else {
      updateQuantity(productId, newQuantity);
    }
  };

  const handleRemove = (productId, title) => {
    if (window.confirm(`B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a "${title}" kh·ªèi gi·ªè h√†ng kh√¥ng?`)) {
      removeFromCart(productId);
    }
  };

  const handleClearCart = () => {
    if (window.confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a t·∫•t c·∫£ s·∫£n ph·∫©m kh·ªèi gi·ªè h√†ng kh√¥ng?")) {
      clearCart();
    }
  };

  const handleProceedToCheckout = () => {
    // Trong pha ƒë·∫ßu, ch√∫ng ta ch·ªâ c·∫ßn th√¥ng b√°o l√† ƒë√£ ƒë·∫∑t h√†ng th√†nh c√¥ng
    alert("Ch·ª©c nƒÉng thanh to√°n s·∫Ω ƒë∆∞·ª£c ph√°t tri·ªÉn sau!");
  };

  if (cartItems.length === 0) {
    return (
      <div className="cart-page">
        <h1 className="cart-title">Gi·ªè h√†ng c·ªßa b·∫°n</h1>
        <div className="empty-cart">
          <div className="empty-cart-icon">üõí</div>
          <p className="empty-cart-message">Gi·ªè h√†ng c·ªßa b·∫°n ƒëang tr·ªëng</p>
          <p className="empty-cart-suggestion">H√£y th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng ƒë·ªÉ ti·∫øp t·ª•c mua s·∫Øm</p>
          <Link to="/books" className="continue-shopping-button">
            Ti·∫øp t·ª•c mua s·∫Øm
          </Link>
        </div>
      </div>
    );
  }

  return (
    <div className="cart-page">
      <h1 className="cart-title">Gi·ªè h√†ng c·ªßa b·∫°n</h1>
      <div className="cart-container">
        <div className="cart-items-container">
          <div className="cart-header">
            <div className="cart-header-product">S·∫£n ph·∫©m</div>
            <div className="cart-header-price">ƒê∆°n gi√°</div>
            <div className="cart-header-quantity">S·ªë l∆∞·ª£ng</div>
            <div className="cart-header-total">Th√†nh ti·ªÅn</div>
            <div className="cart-header-actions">Thao t√°c</div>
          </div>

          {cartItems.map((item) => (
            <div key={item.id} className="cart-item">
              <div className="cart-item-product">
                <Link to={`/books/${item.id}`} className="cart-item-link">
                  <img 
                    src={item.coverImage || "https://placehold.co/600x900"} 
                    alt={item.title} 
                    className="cart-item-image" 
                  />
                  <div className="cart-item-details">
                    <h3 className="cart-item-title">{item.title}</h3>
                    <p className="cart-item-stock">
                      {item.stock > 0 ? `C√≤n ${item.stock} s·∫£n ph·∫©m` : "H·∫øt h√†ng"}
                    </p>
                  </div>
                </Link>
              </div>
              <div className="cart-item-price">
                {item.price?.toLocaleString('vi-VN')} ‚Ç´
              </div>
              <div className="cart-item-quantity">
                <div className="quantity-control">
                  <button
                    className="quantity-btn"
                    onClick={() => handleUpdateQuantity(item.id, item.quantity - 1)}
                  >
                    -
                  </button>
                  <input
                    type="number"
                    min="1"
                    max={item.stock}
                    value={item.quantity}
                    onChange={(e) => handleUpdateQuantity(item.id, parseInt(e.target.value) || 1)}
                    className="quantity-input"
                  />
                  <button
                    className="quantity-btn"
                    onClick={() => handleUpdateQuantity(item.id, item.quantity + 1)}
                    disabled={item.quantity >= item.stock}
                  >
                    +
                  </button>
                </div>
              </div>
              <div className="cart-item-total">
                {(item.price * item.quantity).toLocaleString('vi-VN')} ‚Ç´
              </div>
              <div className="cart-item-actions">
                <button 
                  className="remove-button"
                  onClick={() => handleRemove(item.id, item.title)}
                >
                  X√≥a
                </button>
              </div>
            </div>
          ))}
        </div>

        <div className="cart-summary">
          <h2 className="summary-title">Th√¥ng tin ƒë∆°n h√†ng</h2>
          <div className="summary-details">
            <div className="summary-row">
              <span className="summary-label">T·ªïng s·∫£n ph·∫©m:</span>
              <span className="summary-value">{totalItems}</span>
            </div>
            <div className="summary-row">
              <span className="summary-label">T·∫°m t√≠nh:</span>
              <span className="summary-value">{totalAmount.toLocaleString('vi-VN')} ‚Ç´</span>
            </div>
            <div className="summary-row">
              <span className="summary-label">Ph√≠ v·∫≠n chuy·ªÉn:</span>
              <span className="summary-value">0 ‚Ç´</span>
            </div>
            <div className="summary-row total">
              <span className="summary-label">T·ªïng c·ªông:</span>
              <span className="summary-value total-amount">{totalAmount.toLocaleString('vi-VN')} ‚Ç´</span>
            </div>
          </div>
          <div className="summary-actions">
            <button className="checkout-button" onClick={handleProceedToCheckout}>
              Ti·∫øn h√†nh ƒë·∫∑t h√†ng
            </button>
            <Link to="/books" className="continue-shopping-link">
              Ti·∫øp t·ª•c mua s·∫Øm
            </Link>
            <button className="clear-cart-button" onClick={handleClearCart}>
              X√≥a gi·ªè h√†ng
            </button>
          </div>
        </div>
      </div>
    </div>
  );
}